name: ClickHouse Data Sync

on:
  # –ó–∞–ø—É—Å–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00 UTC)
  schedule:
    - cron: '0 2 * * *'
  
  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
  workflow_dispatch:
    inputs:
      operation:
        description: 'Operation to perform'
        required: true
        default: 'sync'
        type: choice
        options:
          - sync
          - create_table
          - test_connection
          - verify_data

jobs:
  clickhouse-sync:
    runs-on: ubuntu-latest
    
    env:
      ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
      ACCESS_KEY_SECRET: ${{ secrets.ACCESS_KEY_SECRET }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Test ClickHouse connection
        run: |
          echo "Testing ClickHouse connection..."
          curl -s --fail \
            "https://${{ secrets.CLICKHOUSE_HOST }}:8443/" \
            --user "${{ secrets.CLICKHOUSE_USER }}:${{ secrets.CLICKHOUSE_PASSWORD }}" \
            --data "SELECT 1" || {
            echo "‚ùå ClickHouse connection failed"
            exit 1
          }
          echo "‚úÖ ClickHouse connection successful"
      
      - name: Create database and table
        if: github.event.inputs.operation == 'create_table' || github.event.inputs.operation == 'sync'
        run: |
          echo "Creating database and table..."
          curl -s --fail \
            "https://${{ secrets.CLICKHOUSE_HOST }}:8443/" \
            --user "${{ secrets.CLICKHOUSE_USER }}:${{ secrets.CLICKHOUSE_PASSWORD }}" \
            --data-binary @data/raw/sql/create_tables.sql || {
            echo "‚ùå Failed to create table"
            exit 1
          }
          echo "‚úÖ Table created successfully"
      
      - name: Sync data from S3
        if: github.event.inputs.operation == 'sync' || github.event.inputs.operation == ''
        run: |
          echo "Syncing data from S3..."
          # –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ SQL —Ñ–∞–π–ª
          sed "s/{ACCESS_KEY_ID}/${{ secrets.ACCESS_KEY_ID }}/g; s/{ACCESS_KEY_SECRET}/${{ secrets.ACCESS_KEY_SECRET }}/g" data/raw/sql/insert_data.sql > temp_insert.sql
          curl -s --fail \
            "https://${{ secrets.CLICKHOUSE_HOST }}:8443/" \
            --user "${{ secrets.CLICKHOUSE_USER }}:${{ secrets.CLICKHOUSE_PASSWORD }}" \
            --data-binary @temp_insert.sql || {
            echo "‚ùå Failed to sync data"
            exit 1
          }
          rm -f temp_insert.sql
          echo "‚úÖ Data synced successfully"
      
      - name: Test data extraction
        if: github.event.inputs.operation == 'test_connection' || github.event.inputs.operation == 'verify_data'
        run: |
          echo "Testing data extraction..."
          # –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ SQL —Ñ–∞–π–ª
          sed "s/{ACCESS_KEY_ID}/${{ secrets.ACCESS_KEY_ID }}/g; s/{ACCESS_KEY_SECRET}/${{ secrets.ACCESS_KEY_SECRET }}/g" data/raw/sql/test_queries.sql > temp_test.sql
          curl -s --fail \
            "https://${{ secrets.CLICKHOUSE_HOST }}:8443/" \
            --user "${{ secrets.CLICKHOUSE_USER }}:${{ secrets.CLICKHOUSE_PASSWORD }}" \
            --data-binary @temp_test.sql || {
            echo "‚ùå Failed to test data extraction"
            exit 1
          }
          rm -f temp_test.sql
          echo "‚úÖ Data extraction test successful"
      
      - name: Verify all fields
        if: github.event.inputs.operation == 'verify_data'
        run: |
          echo "Verifying all fields extraction..."
          # –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ SQL —Ñ–∞–π–ª
          sed "s/{ACCESS_KEY_ID}/${{ secrets.ACCESS_KEY_ID }}/g; s/{ACCESS_KEY_SECRET}/${{ secrets.ACCESS_KEY_SECRET }}/g" data/raw/sql/verify_fields.sql > temp_verify.sql
          curl -s --fail \
            "https://${{ secrets.CLICKHOUSE_HOST }}:8443/" \
            --user "${{ secrets.CLICKHOUSE_USER }}:${{ secrets.CLICKHOUSE_PASSWORD }}" \
            --data-binary @temp_verify.sql || {
            echo "‚ùå Failed to verify fields"
            exit 1
          }
          rm -f temp_verify.sql
          echo "‚úÖ All fields verified successfully"
      
      - name: Get data statistics
        if: github.event.inputs.operation == 'sync' || github.event.inputs.operation == ''
        run: |
          echo "Getting data statistics..."
          curl -s \
            "https://${{ secrets.CLICKHOUSE_HOST }}:8443/" \
            --user "${{ secrets.CLICKHOUSE_USER }}:${{ secrets.CLICKHOUSE_PASSWORD }}" \
            --data "SELECT COUNT(*) as total_records, COUNT(DISTINCT match_id) as unique_matches, COUNT(DISTINCT team_id) as unique_teams FROM raw.match_stats" \
            --output stats.txt
          echo "üìä Data Statistics:"
          cat stats.txt